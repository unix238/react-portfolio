{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\unix238\\\\Documents\\\\Projects\\\\react-portfolio\\\\src\\\\pages\\\\Projects.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"../style/projects.css\";\nimport passgen from \"../img/passgen.png\";\nimport todo from \"../img/todo-app.webp\";\nimport typeT from \"../img/type.png\";\nimport { ProjectCard } from \"../components/ProjectCard\";\nimport { CardList } from \"../components/CardList\";\nimport { Footer } from \"../components/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Projects = () => {\n  _s();\n\n  const [projects, setProjects] = useState([{\n    img: passgen,\n    title: \"Password Generator\",\n    desc: \"Web application that can generate passwords depending on the user's settings Application written using typescript\",\n    type: \"frontend\",\n    link: \"https://unix238.github.io/react-ts-password-generator/\",\n    git: \"https://github.com/unix238/react-ts-password-generator\"\n  }, {\n    img: todo,\n    title: \"Todo\",\n    desc: \"Task manager that loads active and inactive tasks from the jsonplaceholder also you can create delete and update tasks\",\n    type: \"frontend\",\n    link: \"https://unix238.github.io/react-todo-test/\",\n    git: \"https://github.com/unix238/react-todo-test\"\n  }, {\n    img: typeT,\n    title: \"Type Trainer\",\n    desc: \"Text typing simulator after you finish typing you will see your scores from print speed to accuracy\",\n    type: \"frontend\",\n    link: \"https://unix238.github.io/react-type-trainer/\",\n    git: \"https://github.com/unix238/react-type-trainer\"\n  }, {\n    img: Notes,\n    title: \"Notes\",\n    desc: \"Simple application where you can create notes and save them to the mongodb database (react/node/express)\",\n    type: \"fullstack\",\n    git: \"https://github.com/unix238/notes\"\n  }]);\n  const [filterdProjects, setFilteredProjects] = useState(projects);\n  const [active, setActive] = useState(\"all\");\n\n  const filterHandler = type => {\n    setActive(type);\n\n    if (type === \"all\") {\n      setFilteredProjects(projects);\n      return;\n    }\n\n    const filteredProjects = projects.filter(project => project.type === type);\n    setFilteredProjects(filteredProjects);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projects__container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"projects__title\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Projects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projects__filter\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"projects__filter__group\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: active === \"all\" ? \"filter__active projects__filter__item\" : \"projects__filter__item\",\n              onClick: () => {\n                filterHandler(\"all\");\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: active === \"frontend\" ? \"filter__active projects__filter__item\" : \"projects__filter__item\",\n              onClick: () => {\n                filterHandler(\"frontend\");\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Frontend\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: active === \"fullstack\" ? \"filter__active projects__filter__item\" : \"projects__filter__item\",\n              onClick: () => {\n                filterHandler(\"fullstack\");\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Fullstack\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"projects__filter__count\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [projects.length, \" projects\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projects__cards__group\",\n          children: /*#__PURE__*/_jsxDEV(CardList, {\n            cards: filterdProjects\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Projects, \"eeRuQiGIgiA7550M1WVdT8ElVYs=\");\n\n_c = Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["C:/Users/unix238/Documents/Projects/react-portfolio/src/pages/Projects.jsx"],"names":["React","useState","passgen","todo","typeT","ProjectCard","CardList","Footer","Projects","projects","setProjects","img","title","desc","type","link","git","Notes","filterdProjects","setFilteredProjects","active","setActive","filterHandler","filteredProjects","filter","project","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../style/projects.css\";\r\nimport passgen from \"../img/passgen.png\";\r\nimport todo from \"../img/todo-app.webp\";\r\nimport typeT from \"../img/type.png\";\r\nimport { ProjectCard } from \"../components/ProjectCard\";\r\nimport { CardList } from \"../components/CardList\";\r\nimport { Footer } from \"../components/Footer\";\r\n\r\nexport const Projects = () => {\r\n  const [projects, setProjects] = useState([\r\n    {\r\n      img: passgen,\r\n      title: \"Password Generator\",\r\n      desc: \"Web application that can generate passwords depending on the user's settings Application written using typescript\",\r\n      type: \"frontend\",\r\n      link: \"https://unix238.github.io/react-ts-password-generator/\",\r\n      git: \"https://github.com/unix238/react-ts-password-generator\",\r\n    },\r\n    {\r\n      img: todo,\r\n      title: \"Todo\",\r\n      desc: \"Task manager that loads active and inactive tasks from the jsonplaceholder also you can create delete and update tasks\",\r\n      type: \"frontend\",\r\n      link: \"https://unix238.github.io/react-todo-test/\",\r\n      git: \"https://github.com/unix238/react-todo-test\",\r\n    },\r\n    {\r\n      img: typeT,\r\n      title: \"Type Trainer\",\r\n      desc: \"Text typing simulator after you finish typing you will see your scores from print speed to accuracy\",\r\n      type: \"frontend\",\r\n      link: \"https://unix238.github.io/react-type-trainer/\",\r\n      git: \"https://github.com/unix238/react-type-trainer\",\r\n    },\r\n    {\r\n      img: Notes,\r\n      title: \"Notes\",\r\n      desc: \"Simple application where you can create notes and save them to the mongodb database (react/node/express)\",\r\n      type: \"fullstack\",\r\n      git: \"https://github.com/unix238/notes\",\r\n    },\r\n\r\n  ]);\r\n  const [filterdProjects, setFilteredProjects] = useState(projects);\r\n  const [active, setActive] = useState(\"all\");\r\n\r\n  const filterHandler = (type) => {\r\n    setActive(type);\r\n    if (type === \"all\") {\r\n      setFilteredProjects(projects);\r\n      return;\r\n    }\r\n    const filteredProjects = projects.filter(\r\n      (project) => project.type === type\r\n    );\r\n    setFilteredProjects(filteredProjects);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"projects\">\r\n        <div className=\"projects__container\">\r\n          <div className=\"wrapper\">\r\n            <div className=\"projects__title\">\r\n              <h1>Projects</h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"wrapper\">\r\n          <div className=\"projects__filter\">\r\n            <div className=\"projects__filter__group\">\r\n              <div\r\n                className={\r\n                  active === \"all\"\r\n                    ? \"filter__active projects__filter__item\"\r\n                    : \"projects__filter__item\"\r\n                }\r\n                onClick={() => {\r\n                  filterHandler(\"all\");\r\n                }}\r\n              >\r\n                <p>All</p>\r\n              </div>\r\n              <div\r\n                className={\r\n                  active === \"frontend\"\r\n                    ? \"filter__active projects__filter__item\"\r\n                    : \"projects__filter__item\"\r\n                }\r\n                onClick={() => {\r\n                  filterHandler(\"frontend\");\r\n                }}\r\n              >\r\n                <p>Frontend</p>\r\n              </div>\r\n              <div\r\n                className={\r\n                  active === \"fullstack\"\r\n                    ? \"filter__active projects__filter__item\"\r\n                    : \"projects__filter__item\"\r\n                }\r\n                onClick={() => {\r\n                  filterHandler(\"fullstack\");\r\n                }}\r\n              >\r\n                <p>Fullstack</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"projects__filter__count\">\r\n              <p>{projects.length} projects</p>\r\n            </div>\r\n          </div>\r\n\r\n          {/* projects */}\r\n          <div className=\"projects__cards__group\">\r\n            <CardList cards={filterdProjects} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer></Footer>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}