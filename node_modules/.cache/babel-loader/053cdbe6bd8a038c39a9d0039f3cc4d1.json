{"ast":null,"code":"var _jsxFileName = \"/Users/unix/Documents/Projects/React/react-portfolio/src/pages/Projects.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"../style/projects.css\";\nimport passgen from \"../img/passgen.png\";\nimport todo from \"../img/todo-app.webp\";\nimport typeT from \"../img/type.png\";\nimport { ProjectCard } from \"../components/ProjectCard\";\nimport { CardList } from \"../components/CardList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Projects = () => {\n  _s();\n\n  const [projects, setProjects] = useState([{\n    img: passgen,\n    title: \"Password Generator\",\n    desc: \"Web application that can generate passwords depending on the user's settings Application written using typescript\",\n    type: \"frontend\"\n  }, {\n    img: todo,\n    title: \"Todo\",\n    desc: \"Task manager that loads active and inactive tasks from the jsonplaceholder also you can create delete and update tasks\",\n    type: \"frontend\"\n  }, {\n    img: typeT,\n    title: \"Type Trainer\",\n    desc: \"Text typing simulator after you finish typing you will see your scores from print speed to accuracy\",\n    type: \"frontend\"\n  }]);\n  const [filterdProjects, setFilteredProjects] = useState(projects);\n  const [active, setActive] = useState(\"all\");\n\n  const filterHandler = type => {\n    setActive(type);\n\n    if (type === \"all\") {\n      setFilteredProjects(projects);\n      return;\n    }\n\n    const filteredProjects = projects.filter(project => project.type === type);\n    setFilteredProjects(filteredProjects);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects__container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projects__title\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Projects\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projects__filter\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projects__filter__group\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: active === 'all' ? \"filter__active projects__filter__item\" : \"projects__filter__item\",\n            onClick: () => {\n              filterHandler('all');\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: active === 'frontend' ? \"filter__active projects__filter__item\" : \"projects__filter__item\",\n            onClick: () => {\n              filterHandler('frontend');\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Frontend\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: active === 'fullstack' ? \"filter__active projects__filter__item\" : \"projects__filter__item\",\n            onClick: () => {\n              filterHandler('fullstack');\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Fullstack\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projects__filter__count\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"3 projects\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projects__cards__group\",\n        children: /*#__PURE__*/_jsxDEV(CardList, {\n          cards: filterdProjects\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Projects, \"kLBP0YgwEWxrwxr2N3oR/T6fK3U=\");\n\n_c = Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/Users/unix/Documents/Projects/React/react-portfolio/src/pages/Projects.jsx"],"names":["React","useState","passgen","todo","typeT","ProjectCard","CardList","Projects","projects","setProjects","img","title","desc","type","filterdProjects","setFilteredProjects","active","setActive","filterHandler","filteredProjects","filter","project"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"../style/projects.css\";\nimport passgen from \"../img/passgen.png\";\nimport todo from \"../img/todo-app.webp\";\nimport typeT from \"../img/type.png\";\nimport { ProjectCard } from \"../components/ProjectCard\";\nimport { CardList } from \"../components/CardList\";\n\nexport const Projects = () => {\n  const [projects, setProjects] = useState([\n    {\n      img: passgen,\n      title: \"Password Generator\",\n      desc: \"Web application that can generate passwords depending on the user's settings Application written using typescript\",\n      type: \"frontend\",\n    },\n    {\n      img: todo,\n      title: \"Todo\",\n      desc: \"Task manager that loads active and inactive tasks from the jsonplaceholder also you can create delete and update tasks\",\n      type: \"frontend\",\n    },\n    {\n      img: typeT,\n      title: \"Type Trainer\",\n      desc: \"Text typing simulator after you finish typing you will see your scores from print speed to accuracy\",\n      type: \"frontend\",\n    },\n  ]);\n  const [filterdProjects, setFilteredProjects] = useState(projects);\n  const [active, setActive] = useState(\"all\");\n\n  const filterHandler = (type) =>{\n    setActive(type);\n    if (type === \"all\"){\n      setFilteredProjects(projects);\n      return;\n    }\n    const filteredProjects = projects.filter(project => project.type === type);\n    setFilteredProjects(filteredProjects);\n  }\n\n  return (\n    <div className=\"projects\">\n      <div className=\"projects__container\">\n        <div className=\"wrapper\">\n          <div className=\"projects__title\">\n            <h1>Projects</h1>\n          </div>\n        </div>\n      </div>\n      <div className=\"wrapper\">\n        <div className=\"projects__filter\">\n          <div className=\"projects__filter__group\">\n            <div className={active === 'all' ? \"filter__active projects__filter__item\" : \"projects__filter__item\"} onClick={()=>{filterHandler('all')}}>\n              <p>All</p>\n            </div>\n            <div className={active === 'frontend' ? \"filter__active projects__filter__item\" : \"projects__filter__item\"}onClick={()=>{filterHandler('frontend')}}>\n              <p>Frontend</p>\n            </div>\n            <div className={active === 'fullstack' ? \"filter__active projects__filter__item\" : \"projects__filter__item\"} onClick={()=>{filterHandler('fullstack')}}>\n              <p>Fullstack</p>\n            </div>\n          </div>\n          <div className=\"projects__filter__count\">\n            <p>3 projects</p>\n          </div>\n        </div>\n\n        {/* projects */}\n        <div className=\"projects__cards__group\">\n          <CardList cards={filterdProjects} />\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}